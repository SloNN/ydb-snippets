---
# ydbd installation

- name: Display the distribution type
  ansible.builtin.debug:
    var: ansible_distribution

- name: Ensure libaio1 is installed
  ansible.builtin.package:
    name: libaio1
    state: present
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Ensure libaio is installed
  ansible.builtin.package:
    name: libaio
    state: present
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'RED'

- name: Ensure chrony is installed
  ansible.builtin.package:
    name: chrony
    state: present

- name: Deploy custom libidn
  block:
    - name: Unpacking custom libidn
      unarchive: creates=/usr/local/lib/libidn.so.11 dest=/usr/local/lib group=bin owner=root src={{ libidn_archive }}
    - name: Symlinking libidn.so.11 to /lib64
      ansible.builtin.file:
        src: /usr/local/lib/libidn.so.11
        dest: /lib64/libidn.so.11
        owner: root
        group: bin
        state: link
    - name: Symlinking libidn.so.11 to /usr/lib
      ansible.builtin.file:
        src: /usr/local/lib/libidn.so.11
        dest: /usr/lib/libidn.so.11
        owner: root
        group: bin
        state: link
  when: libidn_archive is defined

- name: Create the ydb group
  group: name=ydb system=true

- name: Create the ydb user
  user: name=ydb group=ydb groups=disk system=true create_home=true home={{ ydbd_dir }}/home comment="YDB Service Account"

- name: Install the YDB server binary package
  unarchive: creates={{ ydbd_dir }}/bin/ydbd dest={{ ydbd_dir }} group=bin owner=root src={{ ydbd_archive }} extra_opts="--strip-component=1"

- name: Create the YDB configuration directory
  file: state=directory path={{ ydbd_dir }}/cfg group=bin owner=root mode=755

- name: Create the YDB audit directory
  file: state=directory path={{ ydbd_dir }}/audit group=ydb owner=ydb mode=700

- name: Create the YDB certs directory
  file: state=directory path={{ ydbd_dir }}/certs group=ydb owner=ydb mode=700

- name: Copy the TLS ca.crt
  template: src={{ ydbd_tls_dir }}/ca.crt dest={{ ydbd_dir }}/certs/ca.crt

- name: Copy the TLS node.crt
  template: src={{ ydbd_tls_dir }}/{{ inventory_hostname_short }}/node.crt dest={{ ydbd_dir }}/certs/node.crt

- name: Copy the TLS node.key
  template: src={{ ydbd_tls_dir }}/{{ inventory_hostname_short }}/node.key dest={{ ydbd_dir }}/certs/node.key

- name: Copy the TLS web.pem
  template: src={{ ydbd_tls_dir }}/{{ inventory_hostname_short }}/web.pem dest={{ ydbd_dir }}/certs/web.pem

- name: Disable YDB CLI version checks
  command: "sudo -u ydb LD_LIBRARY_PATH={{ ydbd_dir }}/lib {{ ydbd_dir }}/bin/ydb version --disable-checks"

- name: Copy cluster configuration file
  copy: src={{ ydbd_config }} dest={{ ydbd_dir }}/cfg/ydbd-config.yaml

- name: Public copy of ca.crt
  template: src={{ ydbd_tls_dir }}/ca.crt dest={{ ydbd_dir }}/cfg/ca.crt

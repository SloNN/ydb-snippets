---
# ydbd static node deployment

- name: Generate the static node service files
  template:
    src: static-service.j2
    dest: "/etc/systemd/system/ydbd-storage.service"

- name: Create the disk formatting script
  template: src=safe_format.j2 dest={{ ydbd_dir }}/home/safe_format.sh mode=755

- name: Create the static node startup wait script
  template: src=wait_initial.j2 dest={{ ydbd_dir }}/home/wait_initial.sh mode=755

- name: Create the storage recovery wait script
  template: src=wait_normal.j2 dest={{ ydbd_dir }}/home/wait_normal.sh mode=755

- name: Create the storage initialization script
  template: src=init_storage.j2 dest={{ ydbd_dir }}/home/init_storage.sh mode=755

- name: Create the password initialization script
  template: src=init_password.j2 dest={{ ydbd_dir }}/home/init_password.sh mode=755

- name: Execute disk formatting
  command: "{{ ydbd_dir }}/home/safe_format.sh {{ item['name'] }} {{ item['label'] }}"
  with_items: "{{ ydbd_disks }}"

- name: Refresh systemd services configuration
  ansible.builtin.systemd:
    daemon_reload: true

- name: Start the storage node
  ansible.builtin.systemd:
    state: started
    name: ydbd-storage
  any_errors_fatal: true

- name: Wait for storage node startup
  command: "sudo -u ydb {{ ydbd_dir }}/home/wait_initial.sh {{ inventory_hostname }}"
  any_errors_fatal: true

- name: Initial YDB cluster setup
  block:
    - name: Initialize the YDB storage
      command: "sudo -u ydb {{ ydbd_dir }}/home/init_storage.sh {{ inventory_hostname }}"
    - name: Wait for storage bootstrap to complete
      command: "sudo -u ydb {{ ydbd_dir }}/home/wait_normal.sh {{ inventory_hostname }}"
    - name: Transfer the secrets
      copy: src=secret dest={{ ydbd_dir }}/certs/secret
    - name: Set the initial cluster password
      command: "sudo -u ydb {{ ydbd_dir }}/home/init_password.sh {{ inventory_hostname }}"
  run_once: true

- name: Cleanup the transferred secrets
  file: state=absent path={{ ydbd_dir }}/certs/secret
